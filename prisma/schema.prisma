generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id String @id

  username String @unique
}

model Announcement {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  date        DateTime @default(now())
  createdAt   DateTime @default(now())
  endDate     DateTime
  image       String?
  startDate   DateTime
  status      String   @default("نشط")
}

model Attendance {
  id        Int      @id @default(autoincrement())
  date      DateTime
  present   Boolean
  studentId String
  lessonId  Int
  Student   Student  @relation(fields: [studentId], references: [id])
}

model Event {
  id                Int             @id @default(autoincrement())
  title             String
  description       String
  startTime         DateTime
  endTime           DateTime
  location          String?
  eventType         EventType       @default(ACADEMIC)
  priority          Priority        @default(MEDIUM)
  status            EventStatus     @default(ACTIVE)
  color             String? // لون مخصص للحدث
  isAllDay          Boolean         @default(false)
  recurrence        RecurrenceType? // نوع التكرار
  recurrenceEndDate DateTime? // تاريخ انتهاء التكرار
  attendees         String[] // قائمة المشاركين
  createdBy         String? // منشئ الحدث
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  image             String? // صورة الحدث
  tags              String[] // علامات للتصنيف
  notes             String? // ملاحظات إضافية
}

model Student {
  id                      String            @id @default(cuid())
  fullName                String
  nationalId              String            @unique
  guardianName            String?
  studentPhone            String?
  birthday                DateTime
  placeOfBirth            String
  address                 String
  nationality             String
  academicYear            String?
  studyLevel              StudyLevel?
  specialization          String?
  studyMode               StudyMode?
  enrollmentStatus        EnrollmentStatus?
  studentStatus           StudentStatus?
  relationship            String?
  guardianPhone           String?
  previousSchool          String?
  previousLevel           String?
  healthCondition         String?
  chronicDiseases         String?
  allergies               String?
  specialNeeds            String?
  emergencyContactName    String?
  emergencyContactPhone   String?
  emergencyContactAddress String?
  notes                   String?
  studentPhoto            String?
  nationalIdCopy          String?
  birthCertificate        String?
  educationForm           String?
  equivalencyDocument     String?
  otherDocuments          Json?
  createdAt               DateTime          @default(now())
  Attendance              Attendance[]
  SubjectGrade            SubjectGrade[]
}

model Subject {
  id             Int              @id @default(autoincrement())
  name           String           @unique
  academicYear   String?
  SubjectGrade   SubjectGrade[]
  TeacherSubject TeacherSubject[]
}

model SubjectGrade {
  id           Int              @id @default(autoincrement())
  academicYear String
  period       EvaluationPeriod
  month1       Int?
  month2       Int?
  month3       Int?
  workTotal    Float            @default(0)
  finalExam    Int?
  periodTotal  Float            @default(0)
  createdAt    DateTime         @default(now())
  updatedAt    DateTime
  studentId    String
  subjectId    Int
  Student      Student          @relation(fields: [studentId], references: [id])
  Subject      Subject          @relation(fields: [subjectId], references: [id])

  @@unique([studentId, subjectId, academicYear, period])
}

model Teacher {
  id                       String              @id
  fullName                 String
  nationalId               String              @unique
  birthday                 DateTime
  nationality              String?
  address                  String?
  createdAt                DateTime            @default(now())
  academicQualification    String?
  appointmentDate          DateTime?
  contractEndDate          DateTime?
  educationalInstitution   String?
  emergencyContactName     String?
  emergencyContactRelation String?
  employmentStatus         EmploymentStatus?
  graduationYear           String?
  majorSpecialization      String?
  maritalStatus            MaritalStatus?
  minorSpecialization      String?
  phone1                   String
  phone2                   String?
  serviceStartDate         DateTime?
  TeacherStudyLevel        TeacherStudyLevel[]
  TeacherSubject           TeacherSubject[]
}

model Staff {
  id                     String         @id
  fullName               String //الاسم الكامل 
  nationalId             String         @unique //الرقم الوطني/الجواز
  birthday               DateTime //تاريخ الميلاد
  maritalStatus          MaritalStatus? // الحالة الاجتماعية 
  address                String? //العنوان
  phone1                 String //الهاتف الأول
  appointmentDate        DateTime? //تاريخ التعيين
  serviceStartDate       DateTime? //تاريخ بدء الخدمة
  academicQualification  String? //المؤهل العلمي
  educationalInstitution String? //المؤسسة التعليمية
  majorSpecialization    String? //التخصص الرئيسي
  graduationYear         String? //سنة التخرج
  createdAt              DateTime       @default(now()) //تاريخ الإنشاء
}

model TeacherStudyLevel {
  id         Int        @id @default(autoincrement())
  teacherId  String
  studyLevel StudyLevel
  createdAt  DateTime   @default(now())
  Teacher    Teacher    @relation(fields: [teacherId], references: [id], onDelete: Cascade)

  @@unique([teacherId, studyLevel])
}

model TeacherSubject {
  id        Int      @id @default(autoincrement())
  teacherId String
  subjectId Int
  createdAt DateTime @default(now())
  Subject   Subject  @relation(fields: [subjectId], references: [id])
  Teacher   Teacher  @relation(fields: [teacherId], references: [id])

  @@unique([teacherId, subjectId])
}

enum Day {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
}

enum EmploymentStatus {
  APPOINTMENT
  CONTRACT
  SECONDMENT
}

enum EnrollmentStatus {
  NEW
  REPEATER
}

enum EvaluationPeriod {
  FIRST
  SECOND
  THIRD
}

enum MaritalStatus {
  SINGLE
  MARRIED
  DIVORCED
  WIDOWED
}

enum StudentStatus {
  ACTIVE
  DROPPED
  SUSPENDED
  EXPELLED
  PAUSED
  GRADUATED
}

enum StudyLevel {
  FIRST_YEAR
  SECOND_YEAR
  THIRD_YEAR
  GRADUATION
}

enum StudyMode {
  REGULAR
  DISTANCE
}

enum EventType {
  ACADEMIC // أكاديمي
  SOCIAL // اجتماعي
  RELIGIOUS // ديني
  ADMINISTRATIVE // إداري
  SPORTS // رياضي
  CULTURAL // ثقافي
  OTHER // أخرى
}

enum Priority {
  LOW // منخفض
  MEDIUM // متوسط
  HIGH // عالي
  URGENT // عاجل
}

enum EventStatus {
  ACTIVE // نشط
  CANCELLED // ملغي
  POSTPONED // مؤجل
  COMPLETED // مكتمل
  DRAFT // مسودة
}

enum RecurrenceType {
  NONE // بدون تكرار
  DAILY // يومي
  WEEKLY // أسبوعي
  MONTHLY // شهري
  YEARLY // سنوي
  CUSTOM // مخصص
}
